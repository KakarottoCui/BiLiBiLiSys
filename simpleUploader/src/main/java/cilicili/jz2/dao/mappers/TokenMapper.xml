<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cilicili.jz2.dao.TokenMapper">
  <resultMap id="BaseResultMap" type="cilicili.jz2.pojo.Token">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="token" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="applytime" javaType="java.time.ZonedDateTime" jdbcType="TIMESTAMP" />
      <arg column="expiretime" javaType="java.time.ZonedDateTime" jdbcType="TIMESTAMP" />
      <arg column="count_auth" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="max_count_auth" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="ussage" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, token, applytime, expiretime, count_auth, max_count_auth, ussage
  </sql>
  <select id="selectByExample" parameterType="cilicili.jz2.pojo.TokenExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tokens
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tokens
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tokens
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cilicili.jz2.pojo.TokenExample">
    delete from tokens
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cilicili.jz2.pojo.Token">
    insert into tokens (id, user_id, token, 
      applytime, expiretime, count_auth, 
      max_count_auth, ussage)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, 
      #{applytime,jdbcType=TIMESTAMP}, #{expiretime,jdbcType=TIMESTAMP}, #{countAuth,jdbcType=INTEGER}, 
      #{maxCountAuth,jdbcType=INTEGER}, #{ussage,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cilicili.jz2.pojo.Token">
    insert into tokens
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="applytime != null">
        applytime,
      </if>
      <if test="expiretime != null">
        expiretime,
      </if>
      <if test="countAuth != null">
        count_auth,
      </if>
      <if test="maxCountAuth != null">
        max_count_auth,
      </if>
      <if test="ussage != null">
        ussage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="applytime != null">
        #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiretime != null">
        #{expiretime,jdbcType=TIMESTAMP},
      </if>
      <if test="countAuth != null">
        #{countAuth,jdbcType=INTEGER},
      </if>
      <if test="maxCountAuth != null">
        #{maxCountAuth,jdbcType=INTEGER},
      </if>
      <if test="ussage != null">
        #{ussage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cilicili.jz2.pojo.TokenExample" resultType="java.lang.Long">
    select count(*) from tokens
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tokens
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.applytime != null">
        applytime = #{record.applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expiretime != null">
        expiretime = #{record.expiretime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.countAuth != null">
        count_auth = #{record.countAuth,jdbcType=INTEGER},
      </if>
      <if test="record.maxCountAuth != null">
        max_count_auth = #{record.maxCountAuth,jdbcType=INTEGER},
      </if>
      <if test="record.ussage != null">
        ussage = #{record.ussage,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tokens
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      token = #{record.token,jdbcType=VARCHAR},
      applytime = #{record.applytime,jdbcType=TIMESTAMP},
      expiretime = #{record.expiretime,jdbcType=TIMESTAMP},
      count_auth = #{record.countAuth,jdbcType=INTEGER},
      max_count_auth = #{record.maxCountAuth,jdbcType=INTEGER},
      ussage = #{record.ussage,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cilicili.jz2.pojo.Token">
    update tokens
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="applytime != null">
        applytime = #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiretime != null">
        expiretime = #{expiretime,jdbcType=TIMESTAMP},
      </if>
      <if test="countAuth != null">
        count_auth = #{countAuth,jdbcType=INTEGER},
      </if>
      <if test="maxCountAuth != null">
        max_count_auth = #{maxCountAuth,jdbcType=INTEGER},
      </if>
      <if test="ussage != null">
        ussage = #{ussage,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cilicili.jz2.pojo.Token">
    update tokens
    set user_id = #{userId,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      applytime = #{applytime,jdbcType=TIMESTAMP},
      expiretime = #{expiretime,jdbcType=TIMESTAMP},
      count_auth = #{countAuth,jdbcType=INTEGER},
      max_count_auth = #{maxCountAuth,jdbcType=INTEGER},
      ussage = #{ussage,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>